import numpy as np

def kmeans(X, k, max_iters=100):
    # Initialize centroids randomly
    centroids = X[np.random.choice(range(len(X)), k, replace=False)]
    
    for _ in range(max_iters):
        # Assign each data point to the closest centroid
        distances = np.linalg.norm(X[:, np.newaxis] - centroids, axis=2)
        labels = np.argmin(distances, axis=1)
        
        # Update centroids based on the mean of the assigned data points
        for i in range(k):
            centroids[i] = np.mean(X[labels == i], axis=0)
    
    return centroids, labels

# Generate synthetic data
np.random.seed(42)
data = np.concatenate([np.random.normal(loc=i, scale=0.5, size=(50, 2)) for i in range(3)])

# Apply K-means clustering
k = 3
centroids, labels = kmeans(data, k)

# Print the results
print("Centroids:")
print(centroids)
print("\nLabels:")
print(labels)
